function Update-Fork {
    param(
        [string]$GitDirectory = (Get-Location)  # –ü–∞—Ä–∞–º–µ—Ç—Ä —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    )

    Write-Host "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–∫–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $GitDirectory" -ForegroundColor Cyan

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (–µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–π)
    Set-Location -Path $GitDirectory

    $currentBranch = git rev-parse --abbrev-ref HEAD


    Write-Host "üì• –ó–∞–±–∏—Ä–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ upstream..." -ForegroundColor Cyan
    git fetch upstream

    Write-Host "üõ†Ô∏è  –î–µ–ª–∞–µ–º rebase —Å upstream/master..." -ForegroundColor Cyan
    git rebase upstream/master

    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùó –ü—Ä–∏ —Ä–µ–±–µ–π—Å–µ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –†–∞–∑—Ä–µ—à–∏ –∏—Ö –∏ –≤—ã–ø–æ–ª–Ω–∏: git rebase --continue" -ForegroundColor Red
        return
    }

    Write-Host "üöÄ –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–≤–æ–π —Ñ–æ—Ä–∫ (—Å --force)..." -ForegroundColor Cyan
    git push origin master --force

    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –§–æ—Ä–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!" -ForegroundColor Green
        New-BurntToastNotification -Text "‚úÖ –§–æ—Ä–∫ –æ–±–Ω–æ–≤–ª—ë–Ω!", "–ú–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É!"
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—à–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å –æ—à–∏–±–∫–∏." -ForegroundColor Red
        New-BurntToastNotification -Text "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ!", "–ü

—Ä–æ–≤–µ—Ä—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é."
    }
}